"[""Rust"", ""//src//lib.rs"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}"", $TransmuteFuncDefWithForgetBr(""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/(mut from: Vec<T>)::parameters{}/~para[idx=0]~/mut from: Vec<T>::parameter{}/~[]~/Vec<T>::generic_type{}/~[]~/<T>::type_arguments{}/~type_arg[idx=0]~/T::type_identifier{}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/(mut from: Vec<T>)::parameters{}/~para[idx=0]~/mut from: Vec<T>::parameter{}/~[]~/from::identifier{}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~return_type[idx=0]~/Vec<u8>::generic_type{}/~[]~/<u8>::type_arguments{}/~type_arg[idx=0]~/u8::primitive_type{}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/let ptr = from.as_mut_ptr();::let_declaration{}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/let capacity = from.capacity() * size_of::<T>();::let_declaration{}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/let len = from.len() * size_of::<T>();::let_declaration{}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/Vec::from_raw_parts(ptr as *mut u8, capacity, len)::call_expression{function:\""Vec::from_raw_parts\""}"", ""//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\""pub\"",function_modifiers:\""unsafe\""}/~[]~/forget(from)::call_expression{function:\""forget\""}""), $TransmuteFuncDefWithForgetCap(""forget(from)"", ""Vec<T>"", ""guarded_transmute_to_bytes_vec"", ""Vec<u8>"", ""lib"", ""u8"", ""Vec::from_raw_parts(ptr as *mut u8, capacity, len)"", ""T"", ""let capacity = from.capacity() * size_of::<T>();"", ""let len = from.len() * size_of::<T>();"", ""from"", ""let ptr = from.as_mut_ptr();"")]"
