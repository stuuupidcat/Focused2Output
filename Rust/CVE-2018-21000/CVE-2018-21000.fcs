[Elements]

TransmuteFuncDef:
    lang: Rust
    file: (transmuteFuncDef).rs
    element: (transmuteFuncName)::function_item#func
    branches:
        - @func//**/~para[idx=0]~/**//(inputParaType)::generic_type//**/~type_arg[idx=0]~/(inputVecType)
        - @func//**/~para[idx=0]~/**//(inputVecName)::identifier
        - @func/~return_type[idx=0]~/(outputTypeArguments)//**/~type_arg[idx=0]~/(outputVecType)
        - @func//**//(ptrDeclaration)::let_declaration
        - @func//**//(capDeclaration)::let_declaration
        - @func//**//(lenDeclaration)::let_declaration
        - @func//**//(outputVecDeclaration)::call_expression

PtrDeclaration:
    lang: Rust
    file: (transmuteFuncDef).rs
    element: (ptrDeclaration)::let_declaration#let
    branches:
        - @let/~left[idx=0]~/(ptrName)
        - @let//**//(fexp)::field_expression/~value~/(inputVecName)
        - @let//**//(fexp)::field_expression/~field~/as_mut_ptr

CapDeclaration:
    lang: Rust
    file: (transmuteFuncDef).rs
    element: (capDeclaration)::let_declaration#let
    branches:
        - @let/~left[idx=0]~/(capName)
        - @let//**//(fexp)::field_expression/~value~/(inputVecName)
        - @let//**//(fexp)::field_expression/~field~/capacity
        - @let//(bexp)::binary_expression[right=(right)]
        - @let//(bexp)::binary_expression[operator=(operator)]

LenDeclaration:
    lang: Rust
    file: (transmuteFuncDef).rs
    element: (lenDeclaration)::let_declaration#let
    branches:
        - @let/~left[idx=0]~/(lenName)
        - @let//**//(fexp)::field_expression/~value~/(inputVecName)
        - @let//**//(fexp)::field_expression/~field~/len
        - @let//(bexp)::binary_expression[right=(right)]
        - @let//(bexp)::binary_expression[operator=(operator)]

OutputVecDeclaration:
    lang: Rust
    file: (transmuteFuncDef).rs
    element: (outputVecDeclaration)::call_expression#call
    branches:
        - @call//**/~arg[idx=0]~/(ptrName)
        - @call//**/~arg[idx=1]~/(capName)
        - @call//**/~arg[idx=2]~/(lenName)

OutputVecDeclarationFull: OutputVecDeclaration
    branches:
        - @call//(path)from_raw_parts

OutputVecDeclarationPart: OutputVecDeclaration
    branches:
        - @call//from_raw_parts


[Links]
    Main {
    private:
        OutputVecDef(output_vec_def):
            & | OutputVecDeclarationFull(output_vec_def)
              | OutputVecDeclarationPart(output_vec_def)

    public:
        TransmuteFunc(output_vec_def):
            & TransmuteFuncDef(func_item)
            & PtrDeclaration(ptr_decl)
            & CapDeclaration(cap_decl)
            & LenDeclaration(len_decl)
            & OutputVecDef(output_vec_def)
            & match(func_item[inputVecName], ptr_decl[inputVecName])
            & match(func_item[inputVecName], cap_decl[inputVecName])
            & match(func_item[inputVecName], len_decl[inputVecName])
            & match(output_vec_def[ptrName], ptr_decl[ptrName])
            & match(output_vec_def[capName], cap_decl[capName])
            & match(output_vec_def[lenName], len_decl[lenName])
    } 


