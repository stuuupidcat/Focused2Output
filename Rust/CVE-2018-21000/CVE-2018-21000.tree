_type = abstract_type | array_type | bounded_type | dynamic_type | function_type | generic_type | macro_invocation | metavariable | never_type | pointer_type | primitive_type | reference_type | removed_trait_bound | scoped_type_identifier | tuple_type | type_identifier | unit_type

_type
type_parameters
type_arguments
parameters
parameter
identifier
arguments

function_item:
    # use `field` as index, convert it to a "raw-string"
    name: {name}                             
    type: {type}
    # use `type` as index, convert it to a "raw-string"
    visibility: visibility_modifier   
    function_modifiers: function_modifiers

let_declaration:
    left: {pattern}

binary_expression:
    right: {right}
    operator: {operator}

call_expression:
    function: {function}

field_expression:
    value: {value}
    field: {field}

parameters/parameter:
    type: "para"
    idx: $idx(this)

function_item/_type:
    type: "return_type"
    idx: $idx(this)
