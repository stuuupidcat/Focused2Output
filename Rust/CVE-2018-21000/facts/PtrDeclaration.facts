[Rust, "//src//lib.rs", "//src//lib.rs/~[]~/guarded_transmute_vec_permissive::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = bytes.as_mut_ptr();::let_declaration{}", $PtrDeclarationBr("//src//lib.rs/~[]~/guarded_transmute_vec_permissive::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = bytes.as_mut_ptr();::let_declaration{}/~left[idx=0]~/ptr::identifier{}", "//src//lib.rs/~[]~/guarded_transmute_vec_permissive::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = bytes.as_mut_ptr();::let_declaration{}/~[]~/bytes.as_mut_ptr()::call_expression{function:\"bytes.as_mut_ptr\"}/~[]~/bytes.as_mut_ptr::field_expression{}/~value[]~/bytes::identifier{}", "//src//lib.rs/~[]~/guarded_transmute_vec_permissive::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = bytes.as_mut_ptr();::let_declaration{}/~[]~/bytes.as_mut_ptr()::call_expression{function:\"bytes.as_mut_ptr\"}/~[]~/bytes.as_mut_ptr::field_expression{}/~field[]~/as_mut_ptr::field_identifier{}"), $PtrDeclarationCap("lib", "bytes.as_mut_ptr", "ptr", "bytes", "let ptr = bytes.as_mut_ptr();")]
[Rust, "//src//lib.rs", "//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = from.as_mut_ptr();::let_declaration{}", $PtrDeclarationBr("//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = from.as_mut_ptr();::let_declaration{}/~left[idx=0]~/ptr::identifier{}", "//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = from.as_mut_ptr();::let_declaration{}/~[]~/from.as_mut_ptr()::call_expression{function:\"from.as_mut_ptr\"}/~[]~/from.as_mut_ptr::field_expression{}/~value[]~/from::identifier{}", "//src//lib.rs/~[]~/guarded_transmute_to_bytes_vec::function_item{visibility:\"pub\",function_modifiers:\"unsafe\"}/~[]~/let ptr = from.as_mut_ptr();::let_declaration{}/~[]~/from.as_mut_ptr()::call_expression{function:\"from.as_mut_ptr\"}/~[]~/from.as_mut_ptr::field_expression{}/~field[]~/as_mut_ptr::field_identifier{}"), $PtrDeclarationCap("lib", "from.as_mut_ptr", "ptr", "from", "let ptr = from.as_mut_ptr();")]
